getwd()
usethis::create_package("GlobalFoodPrices")
usethis::use_git()
usethis::git_sitrep()
usethis::use_readme_rmd()
usethis::use_mit_license("Prajakta")
# Load necessary libraries
library(dplyr)
library(readr)
library(usethis)
# Load the datasets
food_expenditure <- read_csv("data-raw/food-expenditure-per-person-per-year.csv")
source("~/Desktop/assignment-4-packages-and-shiny-apps-PrajaktaChavan0096/GlobalFoodPrices/data_raw/prepare_data.R", echo=TRUE)
# Load necessary libraries
library(dplyr)
library(readr)
library(usethis)
# Load the datasets
food_expenditure <- read_csv("data-raw/food-expenditure-per-person-per-year.csv")
# Load the datasets
food_expenditure <- read_csv("data-raw/food-expenditure-per-person-per-year.csv")
# Load the datasets
food_expenditure <- read_csv("data_raw/food-expenditure-per-person-per-year.csv")
food_expenditure <- read_csv("data_raw/food-expenditure-per-person-per-year.csv")
# Load necessary libraries
library(dplyr)
library(readr)
library(usethis)
# Load the datasets
food_expenditure <- read_csv("data_raw/food-expenditure-per-person-per-year.csv")
getwd()
list.files("data-raw")
# Load necessary libraries
library(dplyr)
library(readr)
library(usethis)
# Load the datasets
food_expenditure <- read_csv("data_raw/food-expenditure-per-person-per-year.csv")
setwd("/Users/prajaktachavan/Desktop/assignment-4-packages-and-shiny-apps-PrajaktaChavan0096")
list.files("assignment-4-packages-and-shiny-apps-PrajaktaChavan0096")
# Load the datasets
food_expenditure <- read_csv("GlobalFoodPrices/data_raw/food-expenditure-per-person-per-year.csv")
high_food_prices <- read_csv("GlobalFoodPrices/data_raw/share-of-countries-recording-high-food-prices.csv")
# Load necessary libraries
library(dplyr)
library(readr)
library(usethis)
# Load the datasets
food_expenditure <- read_csv("GlobalFoodPrices/data_raw/food-expenditure-per-person-per-year.csv")
high_food_prices <- read_csv("GlobalFoodPrices/data_raw/share-of-countries-recording-high-food-prices.csv")
# Inspect the datasets (optional)
head(food_expenditure)
head(high_food_prices)
# Cleaning food_expenditure dataset
cleaned_food_expenditure <- food_expenditure %>%
# Remove rows with missing values
drop_na() %>%
# Convert columns to appropriate types (example: convert year to integer)
mutate(year = as.integer(year),  # Assuming thereâ€™s a 'year' column
expenditure = as.numeric(expenditure))  # Assuming there's an 'expenditure' column
# Load necessary libraries
library(dplyr)
library(tidyr)    # Added for drop_na function
library(readr)
library(usethis)
# Load the datasets
food_expenditure <- read_csv("GlobalFoodPrices/data-raw/food-expenditure-per-person-per-year.csv")
# Load necessary libraries
library(dplyr)
library(tidyr)    # Added for drop_na function
library(readr)
library(usethis)
# Load the datasets
food_expenditure <- read_csv("GlobalFoodPrices/data_raw/food-expenditure-per-person-per-year.csv")
high_food_prices <- read_csv("GlobalFoodPrices/data_raw/share-of-countries-recording-high-food-prices.csv")
# Inspect the datasets (optional)
head(food_expenditure)
head(high_food_prices)
# Cleaning food_expenditure dataset
cleaned_food_expenditure <- food_expenditure %>%
# Remove rows with missing values
drop_na() %>%
# Convert columns to appropriate types (example: convert year to integer)
mutate(year = as.integer(year),               # Replace 'year' with the actual column name if different
expenditure = as.numeric(expenditure)) # Replace 'expenditure' with the actual column name if different
# Display column names
names(food_expenditure)
names(high_food_prices)
# Cleaning food_expenditure dataset
cleaned_food_expenditure <- food_expenditure %>%
drop_na() %>%
mutate(
Year = as.integer(Year),                                  # Convert Year to integer
`Total food expenditure` = as.numeric(`Total food expenditure`)  # Convert Total food expenditure to numeric
)
# Cleaning high_food_prices dataset
cleaned_high_food_prices <- high_food_prices %>%
drop_na() %>%
mutate(
Year = as.integer(Year),  # Convert Year to integer
`High_Food_Price_Abnormal` = as.numeric(`2.c.1 - Proportion of countries recording abnormally high or moderately high food prices, according to the Indicator of Food Price Anomalies (%) - AG_FPA_HMFP - Abnormal: High food prices`),  # Renaming for simplicity
`High_Food_Price_Moderate` = as.numeric(`2.c.1 - Proportion of countries recording abnormally high or moderately high food prices, according to the Indicator of Food Price Anomalies (%) - AG_FPA_HMFP - Moderate: Moderately high food prices`) # Renaming for simplicity
)
# Inspect the cleaned data (optional)
head(cleaned_food_expenditure)
head(cleaned_high_food_prices)
# Save cleaned data for internal use in the package
use_data(cleaned_food_expenditure, name = "cleaned_food_expenditure", overwrite = TRUE)
setwd("GlobalFoodPrices")
# Save cleaned data for internal use in the package
use_data(cleaned_food_expenditure, name = "cleaned_food_expenditure", overwrite = TRUE)
rlang::last_trace()
usethis::create_package("GlobalFoodPrices")
setwd("/Users/prajaktachavan/Desktop/assignment-4-packages-and-shiny-apps-PrajaktaChavan0096")
usethis::create_package("GlobalFoodPrices")
